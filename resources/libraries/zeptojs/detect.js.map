{"version":3,"sources":["detect.js"],"names":["$","detect","ua","platform","os","this","browser","webkit","match","android","osx","ipad","ipod","iphone","webos","win","test","wp","touchpad","kindle","silk","blackberry","bb10","rimtabletos","playbook","chrome","firefox","ie","webview","safari","version","ios","replace","tablet","phone","call","navigator","userAgent","__detect","Zepto"],"mappings":"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","file":"detect.js","sourcesContent":["//     Zepto.js\n//     (c) 2010-2014 Thomas Fuchs\n//     Zepto.js may be freely distributed under the MIT license.\n\n;(function($){\n  function detect(ua, platform){\n    var os = this.os = {}, browser = this.browser = {},\n      webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/),\n      android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/),\n      osx = !!ua.match(/\\(Macintosh\\; Intel /),\n      ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/),\n      ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/),\n      iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/),\n      webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/),\n      win = /Win\\d{2}|Windows/.test(platform),\n      wp = ua.match(/Windows Phone ([\\d.]+)/),\n      touchpad = webos && ua.match(/TouchPad/),\n      kindle = ua.match(/Kindle\\/([\\d.]+)/),\n      silk = ua.match(/Silk\\/([\\d._]+)/),\n      blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/),\n      bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/),\n      rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/),\n      playbook = ua.match(/PlayBook/),\n      chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/),\n      firefox = ua.match(/Firefox\\/([\\d.]+)/),\n      ie = ua.match(/MSIE\\s([\\d.]+)/) || ua.match(/Trident\\/[\\d](?=[^\\?]+).*rv:([0-9.].)/),\n      webview = !chrome && ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/),\n      safari = webview || ua.match(/Version\\/([\\d.]+)([^S](Safari)|[^M]*(Mobile)[^S]*(Safari))/)\n\n    // Todo: clean this up with a better OS/browser seperation:\n    // - discern (more) between multiple browsers on android\n    // - decide if kindle fire in silk mode is android or not\n    // - Firefox on Android doesn't specify the Android version\n    // - possibly devide in os, device and browser hashes\n\n    if (browser.webkit = !!webkit) browser.version = webkit[1]\n\n    if (android) os.android = true, os.version = android[2]\n    if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.')\n    if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.')\n    if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null\n    if (wp) os.wp = true, os.version = wp[1]\n    if (webos) os.webos = true, os.version = webos[2]\n    if (touchpad) os.touchpad = true\n    if (blackberry) os.blackberry = true, os.version = blackberry[2]\n    if (bb10) os.bb10 = true, os.version = bb10[2]\n    if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2]\n    if (playbook) browser.playbook = true\n    if (kindle) os.kindle = true, os.version = kindle[1]\n    if (silk) browser.silk = true, browser.version = silk[1]\n    if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true\n    if (chrome) browser.chrome = true, browser.version = chrome[1]\n    if (firefox) browser.firefox = true, browser.version = firefox[1]\n    if (ie) browser.ie = true, browser.version = ie[1]\n    if (safari && (osx || os.ios || win)) {\n      browser.safari = true\n      if (!os.ios) browser.version = safari[1]\n    }\n    if (webview) browser.webview = true\n\n    os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n      (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)))\n    os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 ||\n      (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n      (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))))\n  }\n\n  detect.call($, navigator.userAgent, navigator.platform)\n  // make available to unit tests\n  $.__detect = detect\n\n})(Zepto)\n"],"sourceRoot":"/source/"}