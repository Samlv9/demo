{"version":3,"sources":["ajax.js"],"names":["$","triggerAndReturn","context","eventName","data","event","Event","trigger","isDefaultPrevented","triggerGlobal","settings","global","document","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","call","ajaxSuccess","deferred","status","success","resolveWith","ajaxComplete","ajaxError","error","type","rejectWith","complete","empty","mimeToDataType","mime","split","htmlType","jsonType","scriptTypeRE","test","xmlTypeRE","appendQuery","url","query","replace","serializeData","options","processData","param","traditional","toUpperCase","undefined","parseArguments","dataType","isFunction","serialize","params","obj","scope","array","isArray","hash","isPlainObject","each","key","value","add","name","jsonpID","window","rscript","blankRE","originAnchor","createElement","href","location","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","script","originalCallback","abort","errorType","triggerHandler","promise","on","e","clearTimeout","off","remove","arguments","src","head","appendChild","timeout","setTimeout","ajaxSettings","XMLHttpRequest","accepts","json","xml","html","text","crossDomain","cache","urlAnchor","extend","Deferred","protocol","host","toString","hasPlaceholder","Date","now","jsonp","headers","setHeader","toLowerCase","RegExp","$1","nativeSetHeader","setRequestHeader","mimeType","indexOf","overrideMimeType","contentType","onreadystatechange","readyState","result","getResponseHeader","responseText","eval","responseXML","parseJSON","statusText","xhrFields","async","open","username","password","apply","send","get","post","getJSON","fn","load","this","length","selector","self","parts","callback","response","find","escape","encodeURIComponent","push","join","Zepto"],"mappings":"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","file":"ajax.js","sourcesContent":["//     Zepto.js\n//     (c) 2010-2014 Thomas Fuchs\n//     Zepto.js may be freely distributed under the MIT license.\n\n;(function($){\n  var jsonpID = 0,\n      document = window.document,\n      key,\n      name,\n      rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n      scriptTypeRE = /^(?:text|application)\\/javascript/i,\n      xmlTypeRE = /^(?:text|application)\\/xml/i,\n      jsonType = 'application/json',\n      htmlType = 'text/html',\n      blankRE = /^\\s*$/,\n      originAnchor = document.createElement('a')\n\n  originAnchor.href = window.location.href\n\n  // trigger a custom event and return false if it was cancelled\n  function triggerAndReturn(context, eventName, data) {\n    var event = $.Event(eventName)\n    $(context).trigger(event, data)\n    return !event.isDefaultPrevented()\n  }\n\n  // trigger an Ajax \"global\" event\n  function triggerGlobal(settings, context, eventName, data) {\n    if (settings.global) return triggerAndReturn(context || document, eventName, data)\n  }\n\n  // Number of active Ajax requests\n  $.active = 0\n\n  function ajaxStart(settings) {\n    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n  }\n  function ajaxStop(settings) {\n    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n  }\n\n  // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n  function ajaxBeforeSend(xhr, settings) {\n    var context = settings.context\n    if (settings.beforeSend.call(context, xhr, settings) === false ||\n        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n      return false\n\n    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n  }\n  function ajaxSuccess(data, xhr, settings, deferred) {\n    var context = settings.context, status = 'success'\n    settings.success.call(context, data, status, xhr)\n    if (deferred) deferred.resolveWith(context, [data, status, xhr])\n    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n    ajaxComplete(status, xhr, settings)\n  }\n  // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n  function ajaxError(error, type, xhr, settings, deferred) {\n    var context = settings.context\n    settings.error.call(context, xhr, type, error)\n    if (deferred) deferred.rejectWith(context, [xhr, type, error])\n    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n    ajaxComplete(type, xhr, settings)\n  }\n  // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n  function ajaxComplete(status, xhr, settings) {\n    var context = settings.context\n    settings.complete.call(context, xhr, status)\n    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n    ajaxStop(settings)\n  }\n\n  // Empty function, used as default callback\n  function empty() {}\n\n  $.ajaxJSONP = function(options, deferred){\n    if (!('type' in options)) return $.ajax(options)\n\n    var _callbackName = options.jsonpCallback,\n      callbackName = ($.isFunction(_callbackName) ?\n        _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),\n      script = document.createElement('script'),\n      originalCallback = window[callbackName],\n      responseData,\n      abort = function(errorType) {\n        $(script).triggerHandler('error', errorType || 'abort')\n      },\n      xhr = { abort: abort }, abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    $(script).on('load error', function(e, errorType){\n      clearTimeout(abortTimeout)\n      $(script).off().remove()\n\n      if (e.type == 'error' || !responseData) {\n        ajaxError(null, errorType || 'error', xhr, options, deferred)\n      } else {\n        ajaxSuccess(responseData[0], xhr, options, deferred)\n      }\n\n      window[callbackName] = originalCallback\n      if (responseData && $.isFunction(originalCallback))\n        originalCallback(responseData[0])\n\n      originalCallback = responseData = undefined\n    })\n\n    if (ajaxBeforeSend(xhr, options) === false) {\n      abort('abort')\n      return xhr\n    }\n\n    window[callbackName] = function(){\n      responseData = arguments\n    }\n\n    script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\n    document.head.appendChild(script)\n\n    if (options.timeout > 0) abortTimeout = setTimeout(function(){\n      abort('timeout')\n    }, options.timeout)\n\n    return xhr\n  }\n\n  $.ajaxSettings = {\n    // Default type of request\n    type: 'GET',\n    // Callback that is executed before request\n    beforeSend: empty,\n    // Callback that is executed if the request succeeds\n    success: empty,\n    // Callback that is executed the the server drops error\n    error: empty,\n    // Callback that is executed on request complete (both: error and success)\n    complete: empty,\n    // The context for the callbacks\n    context: null,\n    // Whether to trigger \"global\" Ajax events\n    global: true,\n    // Transport\n    xhr: function () {\n      return new window.XMLHttpRequest()\n    },\n    // MIME types mapping\n    // IIS returns Javascript as \"application/x-javascript\"\n    accepts: {\n      script: 'text/javascript, application/javascript, application/x-javascript',\n      json:   jsonType,\n      xml:    'application/xml, text/xml',\n      html:   htmlType,\n      text:   'text/plain'\n    },\n    // Whether the request is to another domain\n    crossDomain: false,\n    // Default timeout\n    timeout: 0,\n    // Whether data should be serialized to string\n    processData: true,\n    // Whether the browser should be allowed to cache GET responses\n    cache: true\n  }\n\n  function mimeToDataType(mime) {\n    if (mime) mime = mime.split(';', 2)[0]\n    return mime && ( mime == htmlType ? 'html' :\n      mime == jsonType ? 'json' :\n      scriptTypeRE.test(mime) ? 'script' :\n      xmlTypeRE.test(mime) && 'xml' ) || 'text'\n  }\n\n  function appendQuery(url, query) {\n    if (query == '') return url\n    return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n  }\n\n  // serialize payload and append it to the URL for GET requests\n  function serializeData(options) {\n    if (options.processData && options.data && $.type(options.data) != \"string\")\n      options.data = $.param(options.data, options.traditional)\n    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))\n      options.url = appendQuery(options.url, options.data), options.data = undefined\n  }\n\n  $.ajax = function(options){\n    var settings = $.extend({}, options || {}),\n        deferred = $.Deferred && $.Deferred(),\n        urlAnchor\n    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n    ajaxStart(settings)\n\n    if (!settings.crossDomain) {\n      urlAnchor = document.createElement('a')\n      urlAnchor.href = settings.url\n      urlAnchor.href = urlAnchor.href\n      settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\n    }\n\n    if (!settings.url) settings.url = window.location.toString()\n    serializeData(settings)\n\n    var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\n    if (hasPlaceholder) dataType = 'jsonp'\n\n    if (settings.cache === false || (\n         (!options || options.cache !== true) &&\n         ('script' == dataType || 'jsonp' == dataType)\n        ))\n      settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n    if ('jsonp' == dataType) {\n      if (!hasPlaceholder)\n        settings.url = appendQuery(settings.url,\n          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\n      return $.ajaxJSONP(settings, deferred)\n    }\n\n    var mime = settings.accepts[dataType],\n        headers = { },\n        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n        protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n        xhr = settings.xhr(),\n        nativeSetHeader = xhr.setRequestHeader,\n        abortTimeout\n\n    if (deferred) deferred.promise(xhr)\n\n    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\n    setHeader('Accept', mime || '*/*')\n    if (mime = settings.mimeType || mime) {\n      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n      xhr.overrideMimeType && xhr.overrideMimeType(mime)\n    }\n    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n\n    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\n    xhr.setRequestHeader = setHeader\n\n    xhr.onreadystatechange = function(){\n      if (xhr.readyState == 4) {\n        xhr.onreadystatechange = empty\n        clearTimeout(abortTimeout)\n        var result, error = false\n        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n          result = xhr.responseText\n\n          try {\n            // http://perfectionkills.com/global-eval-what-are-the-options/\n            if (dataType == 'script')    (1,eval)(result)\n            else if (dataType == 'xml')  result = xhr.responseXML\n            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n          } catch (e) { error = e }\n\n          if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)\n          else ajaxSuccess(result, xhr, settings, deferred)\n        } else {\n          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\n        }\n      }\n    }\n\n    if (ajaxBeforeSend(xhr, settings) === false) {\n      xhr.abort()\n      ajaxError(null, 'abort', xhr, settings, deferred)\n      return xhr\n    }\n\n    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n\n    var async = 'async' in settings ? settings.async : true\n    xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n    for (name in headers) nativeSetHeader.apply(xhr, headers[name])\n\n    if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n        xhr.onreadystatechange = empty\n        xhr.abort()\n        ajaxError(null, 'timeout', xhr, settings, deferred)\n      }, settings.timeout)\n\n    // avoid sending empty string (#319)\n    xhr.send(settings.data ? settings.data : null)\n    return xhr\n  }\n\n  // handle optional data/success arguments\n  function parseArguments(url, data, success, dataType) {\n    if ($.isFunction(data)) dataType = success, success = data, data = undefined\n    if (!$.isFunction(success)) dataType = success, success = undefined\n    return {\n      url: url\n    , data: data\n    , success: success\n    , dataType: dataType\n    }\n  }\n\n  $.get = function(/* url, data, success, dataType */){\n    return $.ajax(parseArguments.apply(null, arguments))\n  }\n\n  $.post = function(/* url, data, success, dataType */){\n    var options = parseArguments.apply(null, arguments)\n    options.type = 'POST'\n    return $.ajax(options)\n  }\n\n  $.getJSON = function(/* url, data, success */){\n    var options = parseArguments.apply(null, arguments)\n    options.dataType = 'json'\n    return $.ajax(options)\n  }\n\n  $.fn.load = function(url, data, success){\n    if (!this.length) return this\n    var self = this, parts = url.split(/\\s/), selector,\n        options = parseArguments(url, data, success),\n        callback = options.success\n    if (parts.length > 1) options.url = parts[0], selector = parts[1]\n    options.success = function(response){\n      self.html(selector ?\n        $('<div>').html(response.replace(rscript, \"\")).find(selector)\n        : response)\n      callback && callback.apply(self, arguments)\n    }\n    $.ajax(options)\n    return this\n  }\n\n  var escape = encodeURIComponent\n\n  function serialize(params, obj, traditional, scope){\n    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\n    $.each(obj, function(key, value) {\n      type = $.type(value)\n      if (scope) key = traditional ? scope :\n        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\n      // handle data in serializeArray() format\n      if (!scope && array) params.add(value.name, value.value)\n      // recurse into nested objects\n      else if (type == \"array\" || (!traditional && type == \"object\"))\n        serialize(params, value, traditional, key)\n      else params.add(key, value)\n    })\n  }\n\n  $.param = function(obj, traditional){\n    var params = []\n    params.add = function(key, value) {\n      if ($.isFunction(value)) value = value()\n      if (value == null) value = \"\"\n      this.push(escape(key) + '=' + escape(value))\n    }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n  }\n})(Zepto)\n"],"sourceRoot":"/source/"}