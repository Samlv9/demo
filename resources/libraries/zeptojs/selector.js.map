{"version":3,"sources":["selector.js"],"names":["$","visible","elem","width","height","css","process","sel","fn","replace","filter","arg","match","filterRe","exec","filters","num","Number","isNaN","zepto","oldQsa","qsa","oldMatches","matches","expr","this","hidden","selected","checked","parent","parentNode","first","idx","last","nodes","length","eq","_","value","contains","text","indexOf","has","RegExp","childRe","classTag","Date","node","selector","taggedParent","test","addClass","e","console","error","removeClass","uniq","map","n","i","call","Zepto"],"mappings":"CAIC,SAAUA,GAGT,QAASC,GAAQC,GAEf,MADAA,GAAOF,EAAEE,MACCA,EAAKC,UAAWD,EAAKE,WAAqC,SAAxBF,EAAKG,IAAI,WA+BvD,QAASC,GAAQC,EAAKC,GAEpBD,EAAMA,EAAIE,QAAQ,QAAS,QAC3B,IAAIC,GAAQC,EAAKC,EAAQC,EAASC,KAAKP,EACvC,IAAIK,GAASA,EAAM,IAAMG,KACvBL,EAASK,EAAQH,EAAM,IAAKD,EAAMC,EAAM,GACxCL,EAAMK,EAAM,GACRD,GAAK,CACP,GAAIK,GAAMC,OAAON,EACDA,GAAZO,MAAMF,GAAYL,EAAIF,QAAQ,eAAgB,IACvCO,EAGf,MAAOR,GAAGD,EAAKG,EAAQC,GAhDzB,GAAIQ,GAAQnB,EAAEmB,MAAOC,EAASD,EAAME,IAAKC,EAAaH,EAAMI,QAkBxDR,EAAUf,EAAEwB,KAAK,MACnBvB,QAAU,WAAY,MAAIA,GAAQwB,MAAcA,KAA1B,QACtBC,OAAU,WAAY,MAAKzB,GAAQwB,MAAb,OAA2BA,MACjDE,SAAU,WAAY,MAAIF,MAAKE,SAAiBF,KAA1B,QACtBG,QAAU,WAAY,MAAIH,MAAKG,QAAgBH,KAAzB,QACtBI,OAAU,WAAY,MAAOJ,MAAKK,YAClCC,MAAU,SAASC,GAAM,MAAY,KAARA,EAAkBP,KAAtB,QACzBQ,KAAU,SAASD,EAAKE,GAAQ,MAAIF,KAAQE,EAAMC,OAAS,EAAUV,KAArC,QAChCW,GAAU,SAASJ,EAAKK,EAAGC,GAAQ,MAAIN,KAAQM,EAAcb,KAA1B,QACnCc,SAAU,SAASP,EAAKK,EAAGG,GAAO,MAAIxC,GAAEyB,MAAMe,OAAOC,QAAQD,GAAQ,GAAWf,KAA9C,QAClCiB,IAAU,SAASV,EAAKK,EAAG9B,GAAM,MAAIY,GAAME,IAAII,KAAMlB,GAAK4B,OAAeV,KAAxC,SAG/BZ,EAAW,GAAI8B,QAAO,sCACtBC,EAAW,QACXC,EAAW,UAAY,GAAIC,KAkB/B3B,GAAME,IAAM,SAAS0B,EAAMC,GACzB,MAAO1C,GAAQ0C,EAAU,SAASzC,EAAKG,EAAQC,GAC7C,IACE,GAAIsC,IACC1C,GAAOG,EAAQH,EAAM,IACjBqC,EAAQM,KAAK3C,KAGpB0C,EAAejD,EAAE+C,GAAMI,SAASN,GAAWtC,EAAM,IAAIsC,EAAS,IAAItC,EAEpE,IAAI2B,GAAQd,EAAO2B,EAAMxC,GACzB,MAAM6C,GAEN,KADAC,SAAQC,MAAM,gCAAiCN,GACzCI,EACN,QACIH,GAAcA,EAAaM,YAAYV,GAE7C,MAAQnC,GACNS,EAAMqC,KAAKxD,EAAEyD,IAAIvB,EAAO,SAASwB,EAAGC,GAAI,MAAOjD,GAAOkD,KAAKF,EAAGC,EAAGzB,EAAOvB,MADzDuB,KAKrBf,EAAMI,QAAU,SAASwB,EAAMC,GAC7B,MAAO1C,GAAQ0C,EAAU,SAASzC,EAAKG,EAAQC,GAC7C,QAASJ,GAAOe,EAAWyB,EAAMxC,OAC7BG,GAAUA,EAAOkD,KAAKb,EAAM,KAAMpC,KAASoC,OAGlDc","file":"selector.js","sourcesContent":["//     Zepto.js\n//     (c) 2010-2014 Thomas Fuchs\n//     Zepto.js may be freely distributed under the MIT license.\n\n;(function($){\n  var zepto = $.zepto, oldQsa = zepto.qsa, oldMatches = zepto.matches\n\n  function visible(elem){\n    elem = $(elem)\n    return !!(elem.width() || elem.height()) && elem.css(\"display\") !== \"none\"\n  }\n\n  // Implements a subset from:\n  // http://api.jquery.com/category/selectors/jquery-selector-extensions/\n  //\n  // Each filter function receives the current index, all nodes in the\n  // considered set, and a value if there were parentheses. The value\n  // of `this` is the node currently being considered. The function returns the\n  // resulting node(s), null, or undefined.\n  //\n  // Complex selectors are not supported:\n  //   li:has(label:contains(\"foo\")) + li:has(label:contains(\"bar\"))\n  //   ul.inner:first > li\n  var filters = $.expr[':'] = {\n    visible:  function(){ if (visible(this)) return this },\n    hidden:   function(){ if (!visible(this)) return this },\n    selected: function(){ if (this.selected) return this },\n    checked:  function(){ if (this.checked) return this },\n    parent:   function(){ return this.parentNode },\n    first:    function(idx){ if (idx === 0) return this },\n    last:     function(idx, nodes){ if (idx === nodes.length - 1) return this },\n    eq:       function(idx, _, value){ if (idx === value) return this },\n    contains: function(idx, _, text){ if ($(this).text().indexOf(text) > -1) return this },\n    has:      function(idx, _, sel){ if (zepto.qsa(this, sel).length) return this }\n  }\n\n  var filterRe = new RegExp('(.*):(\\\\w+)(?:\\\\(([^)]+)\\\\))?$\\\\s*'),\n      childRe  = /^\\s*>/,\n      classTag = 'Zepto' + (+new Date())\n\n  function process(sel, fn) {\n    // quote the hash in `a[href^=#]` expression\n    sel = sel.replace(/=#\\]/g, '=\"#\"]')\n    var filter, arg, match = filterRe.exec(sel)\n    if (match && match[2] in filters) {\n      filter = filters[match[2]], arg = match[3]\n      sel = match[1]\n      if (arg) {\n        var num = Number(arg)\n        if (isNaN(num)) arg = arg.replace(/^[\"']|[\"']$/g, '')\n        else arg = num\n      }\n    }\n    return fn(sel, filter, arg)\n  }\n\n  zepto.qsa = function(node, selector) {\n    return process(selector, function(sel, filter, arg){\n      try {\n        var taggedParent\n        if (!sel && filter) sel = '*'\n        else if (childRe.test(sel))\n          // support \"> *\" child queries by tagging the parent node with a\n          // unique class and prepending that classname onto the selector\n          taggedParent = $(node).addClass(classTag), sel = '.'+classTag+' '+sel\n\n        var nodes = oldQsa(node, sel)\n      } catch(e) {\n        console.error('error performing selector: %o', selector)\n        throw e\n      } finally {\n        if (taggedParent) taggedParent.removeClass(classTag)\n      }\n      return !filter ? nodes :\n        zepto.uniq($.map(nodes, function(n, i){ return filter.call(n, i, nodes, arg) }))\n    })\n  }\n\n  zepto.matches = function(node, selector){\n    return process(selector, function(sel, filter, arg){\n      return (!sel || oldMatches(node, sel)) &&\n        (!filter || filter.call(node, null, arg) === node)\n    })\n  }\n})(Zepto)\n"],"sourceRoot":"/source/"}